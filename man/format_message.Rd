% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/format_message.R
\name{format_message}
\alias{format_message}
\title{Format messages and warnings}
\usage{
format_message(string, ..., line_length = 0.9 * options()$width)
}
\arguments{
\item{string}{A string.}

\item{...}{Further strings that will be concatenated as indented new lines.}

\item{line_length}{Numeric, the maximum length of a line.}
}
\value{
A formatted string.
}
\description{
Inserts line breaks into a longer message or warning string.
Line length is adjusted to maximum length of the console, if the width
can be accessed. By default, new lines are indented by two whitespace.
}
\details{
There is an experimental formatting feature implemented in this function.
You can use \verb{\{.b text\}} for bold and \verb{\{.i text\}} formatting. Furthermore,
\verb{\{.url www.url.com\}} formats the string as URL (i.e., enclosing URL in
\code{<} and \code{>}, blue color and italic font style), while \verb{\{.pkg packagename\}}
formats the text in blue color. This features has some limitations:
it's hard to detect the each line length for multiple lines when the string
contains formatting tags. Thus, it can happen that lines are wrapped at an
earlier length than expected. Furthermore, if you have multiple words in a
format tag (`{.b one two three}``), a line break might occur inside this tag,
and the formatting no longer works (messing up the message-string).
}
\examples{
msg <- format_message("Much too long string for just one line, I guess!",
  line_length = 15
)
message(msg)

msg <- format_message("Much too long string for just one line, I guess!",
  "First new line",
  "Second new line",
  "(both indented)",
  line_length = 30
)
message(msg)

# Caution, experimental! See 'Details'
msg <- format_message(
  "This is {.i italic}, visit {.url easystats.github.io/easystats}",
  line_length = 30
)
message(msg)

}
